# Generated by mc: 8:09 5.6.2021.
#
	.data
	.text
main:	addi	$sp, $sp, -4		# push fp
	sw	$fp, 0($sp)
	move	$fp, $sp		# fp <- sp
	addi	$sp, $sp, -244		# allocate locals
	li	$v0, 2
	sw	$v0, -4($fp)
	li	$v0, 3
	sw	$v0, -8($fp)
	lw	$t1, -4($fp)
	lw	$t2, -8($fp)
	slt	$v0, $t2, $t1		# >
	sw	$v0, -12($fp)
	lw	$v0, -12($fp)
	beqz	$v0, l102		# JmpZero
	li	$v0, 10
	sw	$v0, -16($fp)
	lw	$a0, -16($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l103				# Jmp
l102:	nop
	li	$v0, 230
	sw	$v0, -20($fp)
	lw	$a0, -20($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l103:	nop
	li	$v0, 3
	sw	$v0, -24($fp)
	li	$v0, 3
	sw	$v0, -28($fp)
	lw	$t1, -24($fp)
	lw	$t2, -28($fp)
	slt	$v0, $t2, $t1		# >
	sw	$v0, -32($fp)
	lw	$v0, -32($fp)
	beqz	$v0, l106		# JmpZero
	li	$v0, 10
	sw	$v0, -36($fp)
	lw	$a0, -36($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l107				# Jmp
l106:	nop
	li	$v0, 330
	sw	$v0, -40($fp)
	lw	$a0, -40($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l107:	nop
	li	$v0, 4
	sw	$v0, -44($fp)
	li	$v0, 3
	sw	$v0, -48($fp)
	lw	$t1, -44($fp)
	lw	$t2, -48($fp)
	slt	$v0, $t2, $t1		# >
	sw	$v0, -52($fp)
	lw	$v0, -52($fp)
	beqz	$v0, l110		# JmpZero
	li	$v0, 430
	sw	$v0, -56($fp)
	lw	$a0, -56($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l111				# Jmp
l110:	nop
	li	$v0, 10
	sw	$v0, -60($fp)
	lw	$a0, -60($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l111:	nop
	li	$v0, 2
	sw	$v0, -64($fp)
	li	$v0, 3
	sw	$v0, -68($fp)
	lw	$t1, -64($fp)
	lw	$t2, -68($fp)
	sub	$v0, $t2, $t1		# >=
	slti	$v0, $v0, 1
	sw	$v0, -72($fp)
	lw	$v0, -72($fp)
	beqz	$v0, l114		# JmpZero
	li	$v0, 10
	sw	$v0, -76($fp)
	lw	$a0, -76($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l115				# Jmp
l114:	nop
	li	$v0, 230
	sw	$v0, -80($fp)
	lw	$a0, -80($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l115:	nop
	li	$v0, 3
	sw	$v0, -84($fp)
	li	$v0, 3
	sw	$v0, -88($fp)
	lw	$t1, -84($fp)
	lw	$t2, -88($fp)
	sub	$v0, $t2, $t1		# >=
	slti	$v0, $v0, 1
	sw	$v0, -92($fp)
	lw	$v0, -92($fp)
	beqz	$v0, l118		# JmpZero
	li	$v0, 330
	sw	$v0, -96($fp)
	lw	$a0, -96($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l119				# Jmp
l118:	nop
	li	$v0, 10
	sw	$v0, -100($fp)
	lw	$a0, -100($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l119:	nop
	li	$v0, 4
	sw	$v0, -104($fp)
	li	$v0, 3
	sw	$v0, -108($fp)
	lw	$t1, -104($fp)
	lw	$t2, -108($fp)
	sub	$v0, $t2, $t1		# >=
	slti	$v0, $v0, 1
	sw	$v0, -112($fp)
	lw	$v0, -112($fp)
	beqz	$v0, l122		# JmpZero
	li	$v0, 430
	sw	$v0, -116($fp)
	lw	$a0, -116($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l123				# Jmp
l122:	nop
	li	$v0, 10
	sw	$v0, -120($fp)
	lw	$a0, -120($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l123:	nop
	li	$v0, 2
	sw	$v0, -124($fp)
	li	$v0, 3
	sw	$v0, -128($fp)
	lw	$t1, -124($fp)
	lw	$t2, -128($fp)
	slt	$v0, $t1, $t2
	sw	$v0, -132($fp)
	lw	$v0, -132($fp)
	beqz	$v0, l126		# JmpZero
	li	$v0, 230
	sw	$v0, -136($fp)
	lw	$a0, -136($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l127				# Jmp
l126:	nop
	li	$v0, 10
	sw	$v0, -140($fp)
	lw	$a0, -140($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l127:	nop
	li	$v0, 3
	sw	$v0, -144($fp)
	li	$v0, 3
	sw	$v0, -148($fp)
	lw	$t1, -144($fp)
	lw	$t2, -148($fp)
	slt	$v0, $t1, $t2
	sw	$v0, -152($fp)
	lw	$v0, -152($fp)
	beqz	$v0, l130		# JmpZero
	li	$v0, 10
	sw	$v0, -156($fp)
	lw	$a0, -156($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l131				# Jmp
l130:	nop
	li	$v0, 330
	sw	$v0, -160($fp)
	lw	$a0, -160($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l131:	nop
	li	$v0, 4
	sw	$v0, -164($fp)
	li	$v0, 3
	sw	$v0, -168($fp)
	lw	$t1, -164($fp)
	lw	$t2, -168($fp)
	slt	$v0, $t1, $t2
	sw	$v0, -172($fp)
	lw	$v0, -172($fp)
	beqz	$v0, l134		# JmpZero
	li	$v0, 10
	sw	$v0, -176($fp)
	lw	$a0, -176($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l135				# Jmp
l134:	nop
	li	$v0, 430
	sw	$v0, -180($fp)
	lw	$a0, -180($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l135:	nop
	li	$v0, 2
	sw	$v0, -184($fp)
	li	$v0, 3
	sw	$v0, -188($fp)
	lw	$t1, -184($fp)
	lw	$t2, -188($fp)
	sub	$v0, $t1, $t2		# <=
	slti	$v0, $v0, 1
	sw	$v0, -192($fp)
	lw	$v0, -192($fp)
	beqz	$v0, l138		# JmpZero
	li	$v0, 230
	sw	$v0, -196($fp)
	lw	$a0, -196($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l139				# Jmp
l138:	nop
	li	$v0, 10
	sw	$v0, -200($fp)
	lw	$a0, -200($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l139:	nop
	li	$v0, 3
	sw	$v0, -204($fp)
	li	$v0, 3
	sw	$v0, -208($fp)
	lw	$t1, -204($fp)
	lw	$t2, -208($fp)
	sub	$v0, $t1, $t2		# <=
	slti	$v0, $v0, 1
	sw	$v0, -212($fp)
	lw	$v0, -212($fp)
	beqz	$v0, l142		# JmpZero
	li	$v0, 330
	sw	$v0, -216($fp)
	lw	$a0, -216($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l143				# Jmp
l142:	nop
	li	$v0, 10
	sw	$v0, -220($fp)
	lw	$a0, -220($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l143:	nop
	li	$v0, 4
	sw	$v0, -224($fp)
	li	$v0, 3
	sw	$v0, -228($fp)
	lw	$t1, -224($fp)
	lw	$t2, -228($fp)
	sub	$v0, $t1, $t2		# <=
	slti	$v0, $v0, 1
	sw	$v0, -232($fp)
	lw	$v0, -232($fp)
	beqz	$v0, l146		# JmpZero
	li	$v0, 10
	sw	$v0, -236($fp)
	lw	$a0, -236($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
	j	l147				# Jmp
l146:	nop
	li	$v0, 430
	sw	$v0, -240($fp)
	lw	$a0, -240($fp)
	li	$v0, 1			# $v0 -> print int code for syscall
	syscall				# print
l147:	nop
	li	$v0, 0
	sw	$v0, -244($fp)
	lw	$v0, -244($fp)
	move	$sp, $fp
	lw	$fp, 0($sp)		# pop restore fp
	addi	$sp, $sp, 4
	li	$v0, 17			# $v0 gets exit code for syscall
	syscall				# Exit here
